<?php
// boulengerie_barrio.theme

/**
 * @file
 * Functions to support theming in the Boulengerie Barrio theme.
 */

use Drupal\Core\Form\FormStateInterface;
// Plus besoin de ces deux 'use' statements si on utilise l'approche render array:
// use Drupal\filter\Render\FilteredMarkup;
// use Drupal\Component\Render\MarkupInterface;

/**
 * Implements hook_preprocess_HOOK() for all templates.
 */
function boulengerie_barrio_preprocess(&$variables, $hook) {
  if (function_exists('bootstrap_barrio_preprocess')) {
    bootstrap_barrio_preprocess($variables, $hook);
  }
}

/**
 * Implements hook_form_alter().
 */
function boulengerie_barrio_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (function_exists('bootstrap_barrio_form_alter')) {
    bootstrap_barrio_form_alter($form, $form_state, $form_id);
  }
}

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 */
function boulengerie_barrio_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
  $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = [
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  ];
  $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = [
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  ];
}

/**
 * Overrides bootstrap_barrio_form_node_form_alter().
 */
function boulengerie_barrio_form_node_form_alter(&$form, FormStateInterface $form_state) {
  // Do nothing.
}

function boulengerie_barrio_preprocess_page_title(&$variables) {
  $current_route = \Drupal::routeMatch();

  if ($current_route->getRouteName() === 'entity.taxonomy_term.canonical') {

    if (is_array($variables['title']) && isset($variables['title']['#markup'])) {
      $variables['title']['#markup'] = '#' . $variables['title']['#markup'];
    }
    elseif (is_string($variables['title'])) {
      $variables['title'] = '#' . $variables['title'];
    }
  }
}

/**
 * Implements hook_preprocess_node().
 */
function boulengerie_barrio_preprocess_node(array &$variables) {
  $node = $variables['node'];

  // Cible uniquement le type de contenu 'note' et le mode d'affichage 'full'.
  if ($node->bundle() == 'note' && $variables['view_mode'] == 'full') {
    // Vérifie si le champ 'body' existe et n'est pas vide.
    if (!$node->body->isEmpty()) {
      $summary = $node->body->summary;
      $value = $node->body->value;
      $format = $node->body->format; // Récupère le format de texte utilisé (ex: 'full_html').

      // Crée des tableaux de rendu de type 'processed_text'.
      // Ces tableaux seront ensuite rendus par Twig, ce qui déclenchera
      // l'application des filtres de texte de Drupal, y compris celui des médias.
      $variables['processed_summary_render'] = [
        '#type' => 'processed_text',
        '#text' => $summary,
        '#format' => $format,
      ];
      $variables['processed_body_render'] = [
        '#type' => 'processed_text',
        '#text' => $value,
        '#format' => $format,
      ];
    } else {
      // Si le champ body est vide, assurez-vous que les variables sont vides.
      $variables['processed_summary_render'] = []; // Un tableau vide pour un élément de rendu
      $variables['processed_body_render'] = [];
    }
  }
}
